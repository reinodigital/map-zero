import{a as P}from"./chunk-GD2AIEVN.js";import{a as i}from"./chunk-KZ5EEZ6W.js";import{w as E}from"./chunk-G7SYGITX.js";import{a as I}from"./chunk-IETRKHQE.js";import{e as b,p as O,y as v}from"./chunk-ZUYKIS5S.js";import{X as S,ba as m,wa as u}from"./chunk-BXSYLYWC.js";var T=class l{router=m(b);dialog=m(E);customToastService=m(I);purchaseOrderService=m(v);isFormSubmitting=u(!1);isFormNewPurchaseOrderAndEmailSubmitting=u(!1);saveAction="save";sendAction="send";markAsSentAction="mark_as_sent";editAction="edit";editAndSendAction="edit_and_send";subtotal=u(0);totalDiscount=u(0);totalTax=u(0);totalAmount=u(0);cleanTotalValues(){this.subtotal.set(0),this.totalDiscount.set(0),this.totalTax.set(0),this.totalAmount.set(0)}calculateTotals(t){let e=t.controls.reduce((o,s)=>{let d=s.get("quantity")?.value||0,n=s.get("price")?.value||0;return o+d*i(n)},0),r=t.controls.reduce((o,s)=>{let d=s.get("quantity")?.value||0,n=s.get("price")?.value||0,h=i(n),g=s.get("discount")?.value||0,p=d*h*g/100;return o+p},0),a=i(e)-i(r),c=0;t.controls.forEach(o=>{let s=o.get("quantity")?.value||0,d=o.get("price")?.value||0,n=i(d),h=o.get("discount")?.value||0,g=s*n*h/100,p=o.get("taxRate")?.value||"08",f=s*n-g;c+=f*O(p)/100}),this.subtotal.set(i(e)),this.totalDiscount.set(i(r)),this.totalTax.set(i(c)),this.totalAmount.set(i(a+c))}verifyPurchaseOrderItems(t){return t.controls.every(e=>this.isPurchaseOrderItemValid(e))}isPurchaseOrderItemValid(t){let e=t.get("quantity")?.value,r=t.get("price")?.value,a=t.get("itemId")?.value;return e>=1&&r>0&&!!a}onSaveAction(t){this.isFormSubmitting.set(!0),this.purchaseOrderService.create(t).subscribe(e=>{e&&e.id?(this.customToastService.add({message:`Orden de Compra generada con estado ${e.status} correctamente.`,type:"success",duration:5e3}),this.router.navigateByUrl(`/detail-purchase-order/${e.id}`)):this.customToastService.add({message:e.message,type:"error",duration:5e3}),this.isFormSubmitting.set(!1)})}onEditAction(t,e){this.isFormSubmitting.set(!0),this.purchaseOrderService.update(t,e).subscribe(r=>{r&&r.id?(this.customToastService.add({message:"Orden de Compra actualizada correctamente.",type:"success",duration:5e3}),this.router.navigateByUrl(`/detail-purchase-order/${r.id}`)):this.customToastService.add({message:r.message,type:"error",duration:5e3}),this.isFormSubmitting.set(!1)})}handleCreateOrEditPurchaseOrderSendingEmailAsWell(t,e=null){let r={clientName:t.client.name,currency:t.currency,deliveryInstructions:t.deliveryInstructions,total:this.totalAmount()},a=this.dialog.open(P,{width:"70rem",autoFocus:!1,data:r});a.updatePosition({top:"100px"}),a.afterClosed().subscribe(c=>{c&&(e?this.onEditPurchaseOrderSendingEmail(e,t,JSON.parse(c)):this.onCreateNewPurchaseOrderSendingEmail(t,JSON.parse(c)))})}onCreateNewPurchaseOrderSendingEmail(t,e){this.purchaseOrderService.create(t).subscribe(r=>{r&&r.id?(this.customToastService.add({message:`Orden de Compra generada con estado ${t.status} correctamente.`,type:"success",duration:8e3}),this.sendPurchaseOrderEmail(r.id,e)):this.customToastService.add({message:r.message,type:"error",duration:8e3})})}onEditPurchaseOrderSendingEmail(t,e,r){this.purchaseOrderService.update(t,e).subscribe(a=>{a&&a.id?(this.customToastService.add({message:"Orden de Compra actualizada correctamente.",type:"success",duration:8e3}),this.sendPurchaseOrderEmail(a.id,r)):this.customToastService.add({message:a.message,type:"error",duration:8e3})})}sendPurchaseOrderEmail(t,e){this.isFormNewPurchaseOrderAndEmailSubmitting.set(!0),this.purchaseOrderService.sendEmail(t,e).subscribe(r=>{r&&r.msg?this.customToastService.add({message:r.msg,type:"success",duration:5e3}):this.customToastService.add({message:r.message,type:"error",duration:5e3}),this.isFormNewPurchaseOrderAndEmailSubmitting.set(!1),this.router.navigateByUrl("/detail-purchase-order/"+t)})}getCorrectPriceFromItemSelectedEmitter(t,e){let r=t?.purchaseOrderItems.find(a=>a.item.id===e.id);return e.isLoadingExistingItem?r?.price??0:e.salePrice}getCorrectAccountFromItemSelectedEmitter(t,e){let r=t?.purchaseOrderItems.find(a=>a.item.id===e.id);return e.isLoadingExistingItem?r?.account?.id??"":e.saleAccountId??""}getCorrectDescriptionFromItemSelectedEmitter(t,e){let r=t?.purchaseOrderItems.find(a=>a.item.id===e.id);return e.isLoadingExistingItem?r?.description??"":e.description??""}static \u0275fac=function(e){return new(e||l)};static \u0275prov=S({token:l,factory:l.\u0275fac,providedIn:"root"})};export{T as a};
